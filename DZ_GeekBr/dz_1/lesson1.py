# !!! git tests_3
# !!! git tests_2
# форматирование строк
# %
# format
# f - строки.
# рассписать все варианты в ноте

# + 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и
# строк и сохраните в переменные, выведите на экран.
#----------------------------------------------------------------------------------------------

# variable_1 = 7
# variable_2 = int(input('введите число: '))
# variable_txt = input('введите текст : ')
#
# print(f'Переменная созданная: {variable_1}, Вы ввели число: {variable_2}, Вы ввели текст: {variable_txt}')


# + 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
#----------------------------------------------------------------------------------------------

# time_sec = int(input('Введите время в секундах: '))
# time_min = int((time_sec / 60) % 60)
# time_hrs = time_sec // (60 * 60)
#
# print(f'Вы ввели: {time_sec} секунд, это {time_hrs} часов, {time_min} минут, {time_sec % 60} секунд')


# + 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
#----------------------------------------------------------------------------------------------

# number_n = int(input('Введите число n: '))
# n_summ = number_n + number_n * 10 + number_n + number_n * 100 + number_n * 10 + number_n
# n_summ_2 = 3 * number_n + 2 * 10 * number_n + 100 * number_n  # то же самое, выражение упрощено
# print(n_summ)
# print(n_summ_2)
#
# # второй вариант через строки, результат будет совсем другим (если числа не от 1 до 9), в условии не явно, но привожу:
# n_summ_str = number_n + int(str(number_n) * 2) + int(str(number_n) * 3)
#
# print(n_summ_str)


# + 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.
#----------------------------------------------------------------------------------------------

# number_user = int(input('Введите целое положительное число: '))  # 7985
# max_number = 0
#
# while number_user * 10 // 10 != 0:  # домножил на 10, чтобы проходил первую цифру тоже
#     if number_user % 10 > max_number:
#         max_number = number_user % 10
#     number_user = number_user // 10
# print('максимальная цифра в числе : ', max_number)



# + 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма
# (прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
#----------------------------------------------------------------------------------------------

# revenue_firm = int(input('введите выручку за год: '))
# costs_firm = int(input('введите издержки фирмы за год: '))
# if revenue_firm > costs_firm:
#     numbers_man = int(input('введите число сотрудников : '))
#     print('Фирма имеет прибыль: ', revenue_firm - costs_firm)
#     print(f'Фиарма имеет рентабельность выручки: {(revenue_firm - costs_firm) / revenue_firm * 100:.2f}%')
#     print(f'Прибыль фирмы в расчете на одного сотрудника: {(revenue_firm - costs_firm) / numbers_man:.2f}')
# elif revenue_firm < costs_firm:
#     print('Фирма имеет убыток: ', costs_firm - revenue_firm)
# else:
#     print('Фирма имеет нулевой результат работы')


# + 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
#
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км..
#----------------------------------------------------------------------------------------------

# start_distance = int(input('В первый день спортсмен пробежал, км (введите): '))
# end_distance = int(input('Дистанция, которую нужно преодалеть за день, км (введите): '))
# rise = 0.1
# start_distance = start_distance / (1 + rise)  # чтобы захватить превышение последнего дня, костыль тут
# day = 0
# while start_distance < end_distance:
#     day += 1
#     start_distance += rise * start_distance
#     print(f'{day}-й день:{start_distance:.2f}')
#
# print(f'Ответ: на {day}-й день спортсмен достиг результата — не менее {end_distance} км.')
